// Problem Link :- https://www.youtube.com/watch?v=AsGzwR_FWok

// Video Solution :- https://www.youtube.com/watch?v=AsGzwR_FWok

// Brute

int[] arr = {900,945,955,1100,1500,1800};
        int[] dep = {920,1200,1130,1150,1900,2000};
        int n=arr.length;

        int ans=1; //final value
        for(int i=0;i<=n-1;i++)
        {
            int count=1; // count of overlapping interval of only this   iteration
            for(int j=i+1;j<=n-1;j++)
            {
                if((arr[i]>=arr[j] && arr[i]<=dep[j]) ||
                        (arr[j]>=arr[i] && arr[j]<=dep[i]))
                {
                    count++;
                }
            }
            ans=Math.max(ans,count); //updating the value
        }

        System.out.println(ans);

// Optimised Approach

public class Test {
    public static void main(String[] args) {

        int[] arr = {900,945,955,1100,1500,1800};
        int[] dep = {920,1200,1130,1150,1900,2000};
        int i=1,j=0,ans = Integer.MIN_VALUE,platform=1;
        int n = arr.length;

        while(j < n && i < n){

            if(arr[i] <= dep[j]){
                platform++;
                i++;
            }
            else{
                platform--;
                j++;
            }

            ans = Math.max(ans,platform);
        }
        System.out.println(ans);
    }
}
