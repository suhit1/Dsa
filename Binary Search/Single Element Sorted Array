// Problem Link :- https://leetcode.com/problems/single-element-in-a-sorted-array/description/


// Brute

1) Do a linear search
2) as the array is sorted just check if the present element is same as next one and you are all well!

// Optimised

class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n = nums.length;
        if(n == 1) return nums[0];
        if(nums[n-1] != nums[n-2]) return nums[n-1];
        if(nums[0] != nums[1]) return nums[0];
        int start = 1,end = nums.length-2;
        while(start <= end){
            int mid  = (start+end)/2;
            if(nums[mid] != nums[mid-1] && nums[mid] != nums[mid+1]){
                return nums[mid];
            }
            else if(mid%2 == 0){
                if(nums[mid] == nums[mid+1]){
                    start = mid+1;
                }else{
                    end = mid-1;
                }
            }else{
                if(nums[mid] == nums[mid+1]){
                    end = mid-1;
                }else{
                    start = mid+1;
                }
            }
        }
        return -1;
    }
}