// Problem Link :- https://leetcode.com/problems/merge-sorted-array/description/


// Brute Force -> using one extra empty array 
        int nums1[] = {1,2,3,0,0,0};
        int nums2[] = {2,5,6};
        int i=0,j=0,c=0;
        int arr[] = new int[nums1.length];

        while(j< nums2.length && nums1[i] != 0){
            if(nums1[i] < nums2[j]){
                arr[c] = nums1[i];
                i++;
            }
            else{
                arr[c] = nums2[j];
                j++;
            }
            c++;
        }

        if(nums1[i] == 0){
            while(j<nums2.length){
                arr[c++] = nums2[j++];
            }
        }
        else {
            while(i<nums1.length){
                arr[c++]= nums1[i];
                i++;
            }
        }

        for(int el:arr){
            System.out.print(el+" ");
        }

// optimised Approach 

// basically in this approach hmne two pointers use krke dono arrays mei shi shi elelements shift krdiye bs last mei unko sort krna pdega

int left = m-1,right=0;

        while(left >= 0 && right < n){
            if(nums1[left] > nums2[right]){
                int temp = nums1[left];
                nums1[left] = nums2[right];
                nums2[right] = temp;
                left--;
                right++;
            }
            else{
                break;
            }
        }

        int j=0;
       for (int i=0;i<nums1.length;i++){
           if(nums1[i]!=0) continue;
           else{
            if(j<nums2.length)
               nums1[i] = nums2[j++];
           }
       }

       Arrays.sort(nums1);

