// Problem Link :- https://leetcode.com/problems/find-the-duplicate-number/description/

// Brute Force -> using hashset
        int nums[] = {1,3,4,2,2};
        HashSet<Integer> set = new HashSet<>();

        for(int el:nums){
            if(set.contains(el)){
                System.out.println("Duplicate Found :- "+el);
                break;
            }
            set.add(el);
        }

        //Better Approach -> Sort the arrays
        int nums[] = {3,3,3,3,3},n=nums.length-1;
        Arrays.sort(nums);
        for (int i=0;i<n-1;i++){
            if(nums[i] == nums[i+1]){
                System.out.println("Duplicate Found :- "+nums[i]);
                break;
            }
        }

        //optimised approach -> without sorting and without extra space
        int nums[] = {1,3,4,2,2};
        int slow = nums[0],fast = nums[0];
        do{
            slow = nums[slow];
            fast = nums[nums[fast]];
        }while(slow != fast);

        fast = nums[0];

        while(fast != slow){
            slow = nums[slow];
            fast = nums[fast];
        }

        System.out.println("Duplicate :- "+slow);